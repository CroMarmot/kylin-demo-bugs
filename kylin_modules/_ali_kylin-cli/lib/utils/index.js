"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isWin=void 0,exports.question=question,exports.hint=hint,exports.copyAndReplaceForFile=copyAndReplaceForFile,exports.copyAndReplace=copyAndReplace,exports.exec=exec,exports.parseNameDash=parseNameDash,exports.parseNameCamel=parseNameCamel,exports.getOutputAbsDir=getOutputAbsDir,exports.gitlabCloneForLocal=gitlabCloneForLocal;var _path=require("path"),_path2=_interopRequireDefault(_path),_chalk=require("chalk"),_chalk2=_interopRequireDefault(_chalk),_shelljs=require("shelljs"),_shelljs2=_interopRequireDefault(_shelljs),_glob=require("glob"),_glob2=_interopRequireDefault(_glob),_fs=require("fs"),_fs2=_interopRequireDefault(_fs),_inquirer=require("inquirer"),_inquirer2=_interopRequireDefault(_inquirer),_mkdirp=require("mkdirp"),_mkdirp2=_interopRequireDefault(_mkdirp),_fsExtra=require("fs-extra"),_fsExtra2=_interopRequireDefault(_fsExtra);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}const isWin=exports.isWin=/^win/.test(process.platform);function question(e){return new Promise(function(t,r){_inquirer2.default.prompt(e).then(t,r)})}function hint(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log(`${_chalk2.default.cyan(e)} ${t}`)}function copyAndReplaceForFile(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(_fs2.default.existsSync(e))if(_mkdirp2.default.sync(_path2.default.dirname(t)),_fs2.default.statSync(e).isDirectory())_fs2.default.existsSync(t)||_mkdirp2.default.sync(t);else{let l=_fs2.default.readFileSync(e).toString();for(let e in r){let t=new RegExp("<%=\\s*?"+e+"\\s*?%>","gi");t.test(l)&&(l=l.replace(t,r[e]))}l=l.replace(/<%=\s*?[\w\d\-_]*\s*?%>/gi,""),_fs2.default.writeFileSync(t,l)}}function copyAndReplace(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];_fs2.default.existsSync(t)||_mkdirp2.default.sync(t),_glob2.default.sync("**",{cwd:e,dot:!0,ignore:["**/**/.gitkeep",".git/**"].concat(l)}).forEach(function(l){copyAndReplaceForFile(_path2.default.join(e,l),_path2.default.join(t,l),r)})}function*exec(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise(function(r,l){try{const n=_shelljs2.default.exec(e,{silent:t.slient});if(!n||0!==n.code)throw new Error(n&&n.stderr);r(n)}catch(e){l(e)}})}function parseNameDash(e){return(e[0].toLowerCase()+e.substr(1)).replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}function parseNameCamel(e,t){let r=e.replace(/(\-[a-z])/g,function(e){return e.substr(1).toUpperCase()});return t?r[0].toUpperCase()+r.substr(1):r}function getOutputAbsDir(e,t){return _path2.default.join(e.cwd,_path2.default.relative(e.cwd,t))}function*gitlabCloneForLocal(e){let t=e.tmp,r=e.template,l=e.program;const n=_path2.default.resolve(l.cwd,l.templatePath,r);_fsExtra2.default.copySync(n,t)}hint.success=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log(`${_chalk2.default.green(e)} ${t}`)},hint.error=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log(`${_chalk2.default.red(e)} ${t}`)},hint.warn=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log(`${_chalk2.default.yellow(e)} ${t}`)};