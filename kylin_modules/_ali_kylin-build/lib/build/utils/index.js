"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.assetsPath=assetsPath,exports.cssLoaders=cssLoaders,exports.styleLoaders=styleLoaders,exports.determineKylinConfig=determineKylinConfig,exports.determineSourcemapType=determineSourcemapType;var _path2=require("path"),_path3=_interopRequireDefault(_path2),_fs=require("fs"),_fs2=_interopRequireDefault(_fs),_extractTextWebpackPlugin=require("extract-text-webpack-plugin"),_extractTextWebpackPlugin2=_interopRequireDefault(_extractTextWebpackPlugin),_chalk=require("chalk"),_chalk2=_interopRequireDefault(_chalk),_utils=require("../../utils"),_resolve=require("resolve"),_resolve2=_interopRequireDefault(_resolve);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function assetsPath(e){return _path3.default.posix.join("",e)}function cssLoaders(e){function r(r){var t=r.map(function(r){var t;return t=/\?/.test(r)?"&":"?",r+(e.sourceMap?t+"sourceMap":"")}).join("!");if(e.extract){const r=void 0!==e.publicPath?{publicPath:e.publicPath}:{};return _extractTextWebpackPlugin2.default.extract(require.resolve("vue-style-loader"),t,r)}return!1===e.styleLoader?e.emit?[require.resolve("../loader/emit-loader.js"),t].join("!"):t:[e.emit?require.resolve("../loader/emit-loader"):require.resolve("vue-style-loader"),t].join("!")}e=e||{};let t=!0,s=!0,i=!0;try{_resolve2.default.sync("css-loader",{basedir:process.cwd()})}catch(e){t=!1}try{_resolve2.default.sync("less-loader",{basedir:process.cwd()})}catch(e){s=!1}try{_resolve2.default.sync("postcss-loader",{basedir:process.cwd()})}catch(e){i=!1}var o=t?"css-loader?minimize=false":require.resolve("css-loader")+"?minimize=false",a=s?"less-loader":require.resolve("less-loader"),l=i?"postcss-loader":require.resolve("postcss-loader");function n(r){return e.postcss?e.emit?[l].concat(r.slice(1)):[r[0],l].concat(r.slice(1)):r}return{css:r(n([o])),postcss:r(n([o])),less:r(n([o,a]))}}function styleLoaders(e){var r=[],t=exports.cssLoaders(e);for(var s in t){var i=t[s];r.push({test:new RegExp("\\."+s+"$"),loader:i})}return r}function determineKylinConfig(e,r){const t=e.cwd;if(e.configPath){const r=_path3.default.resolve(t,e.configPath);if(!_fs2.default.existsSync(r)){const t=`specific config path "${_chalk2.default.yellow(r)}" ${_chalk2.default.red("does not exists")} using ${_chalk2.default.gray('--config-path "'+e.configPath+'"')} `;throw _utils.hint.error("[Config]",t),new Error(t)}try{const t=require(r)||{};return _utils.hint.warn("[Config]",`using config "${r}"`),t}catch(t){const s=`specific config path "${_chalk2.default.yellow(r)}" ${_chalk2.default.red("is invalid json file")} using ${_chalk2.default.gray('--config-path "'+e.configPath+'"')} `;throw _utils.hint.error("[Config]",s),new Error(s)}}else{const e="kylin.config.js",s=_path3.default.resolve(t,e);if(!_fs2.default.existsSync(s)){const e=`${t}/package.json`,s=require(e);return _utils.hint.warn("[Config]",`using config "${e}"."${r}"`),s[r]||{}}try{const e=require(s)||{};return _utils.hint.warn("[Config]",`using config "${s}"`),e}catch(e){const r=`default config path "${_chalk2.default.yellow(s)}" ${_chalk2.default.red("is invalid json file")} `;throw _utils.hint.error("[Config]",r),new Error(r)}}}function determineSourcemapType(e,r){let t=!1;if(void 0===e)t=!r&&"eval-module-source-map";else if("string"==typeof e)switch(e.toLowerCase()){case"false":case"null":t=!1;break;default:t=e}else!0===e&&(t=r?"source-map":"eval-module-source-map");return t}